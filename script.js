// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const menu = document.getElementById('menu');
const meterScreen = document.getElementById('meter-screen');
const measureBtn = document.getElementById('measureBtn');
const backBtn = document.getElementById('backBtn');
const pointer = document.getElementById('pointer');
const ticksGroup = document.getElementById('ticks');
const numbersGroup = document.getElementById('numbers');
const gradient = document.getElementById('meter-gradient');
const resultDiv = document.getElementById('result');

let currentMeter = 1;

// –ó–≤—É–∫–∏ –¥–≤—É—Ö –º–µ–º–æ–º–µ—Ç—Ä–æ–≤ (–ø–æ 3 –Ω–∞ –∫–∞–∂–¥—ã–π)
const sounds = {
  1: ['sounds/meter1_1.mp3','sounds/meter1_2.mp3','sounds/meter1_3.mp3'],
  2: ['sounds/meter2_1.mp3','sounds/meter2_2.mp3','sounds/meter2_3.mp3']
};

// –ì—Ä–∞–¥–∏–µ–Ω—Ç—ã –º–µ–º–æ–º–µ—Ç—Ä–æ–≤
const meterColors = {
  1: ['#0f0','#ff0','#f00'],
  2: ['#0ff','#f0f','#ff0']
};

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∫–∞–ª—ã
const centerX = 150;
const centerY = 150;
const radius = 120;
const totalTicks = 10;

// –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–µ–ª–µ–Ω–∏–π –∏ —Ü–∏—Ñ—Ä
function buildScale() {
  ticksGroup.innerHTML = '';
  numbersGroup.innerHTML = '';

  for (let i = 0; i <= totalTicks; i++) {
    const angle = Math.PI * i / totalTicks; // 0-180¬∞
    const cosA = Math.cos(angle);
    const sinA = Math.sin(angle);

    // –î–µ–ª–µ–Ω–∏—è
    const x1 = centerX + cosA * (radius - 5);
    const y1 = centerY - sinA * (radius - 5);
    const x2 = centerX + cosA * (radius + 5);
    const y2 = centerY - sinA * (radius + 5);

    const line = document.createElementNS("http://www.w3.org/2000/svg","line");
    line.setAttribute("x1", x1);
    line.setAttribute("y1", y1);
    line.setAttribute("x2", x2);
    line.setAttribute("y2", y2);
    line.setAttribute("stroke", "#fff");
    line.setAttribute("stroke-width", "2");
    ticksGroup.appendChild(line);

    // –¶–∏—Ñ—Ä—ã
    const numberX = centerX + cosA * (radius + 20);
    const numberY = centerY - sinA * (radius + 20);

    const text = document.createElementNS("http://www.w3.org/2000/svg","text");
    text.setAttribute("x", numberX);
    text.setAttribute("y", numberY + 5);
    text.setAttribute("text-anchor", "middle");
    text.textContent = i * 10;
    numbersGroup.appendChild(text);
  }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ–º–æ–º–µ—Ç—Ä–∞
function openMeter(meterId) {
  currentMeter = meterId;
  const colors = meterColors[currentMeter];

  // –û–±–Ω–æ–≤–ª—è–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç
  gradient.children[0].setAttribute('stop-color', colors[0]);
  gradient.children[1].setAttribute('stop-color', colors[1]);
  gradient.children[2].setAttribute('stop-color', colors[2]);

  pointer.style.transform = 'rotate(0deg)';
  resultDiv.textContent = '';

  menu.style.display = 'none';
  meterScreen.style.display = 'block';
}

// –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
backBtn.addEventListener('click', () => {
  meterScreen.style.display = 'none';
  menu.style.display = 'block';
});

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –º–æ—â–Ω–æ—Å—Ç–∏
function getRandomPower() {
  return Math.floor(Math.random() * 101); // 0-100%
}

// –î–≤–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ–ª–∫–∏ –ø–æ —à–∫–∞–ª–µ
function movePointer(power) {
  const angle = power / 100 * 180; // 0-180¬∞
  pointer.style.transform = `rotate(${angle}deg)`;
}

// –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∑–≤—É–∫–∞
function playRandomSound() {
  const list = sounds[currentMeter];
  const index = Math.floor(Math.random() * list.length);
  const audio = new Audio(list[index]);
  audio.play();
}

// –ö–Ω–æ–ø–∫–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è
measureBtn.addEventListener('click', () => {
  const power = getRandomPower();
  movePointer(power);
  playRandomSound();

  if (power < 30) resultDiv.textContent = `–ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å —Å–ª–∞–±–∫–∞: ${power}% üíß`;
  else if (power < 70) resultDiv.textContent = `–ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å —Å–µ—Ä–µ–¥–Ω—è: ${power}% ‚ö°`;
  else resultDiv.textContent = `–ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞: ${power}% üî•`;
});

// –ü—Ä–∏–≤—è–∑–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
document.querySelectorAll('.menu-btn').forEach(btn => {
  btn.addEventListener('click', () => {
    openMeter(parseInt(btn.dataset.meter));
  });
});

// –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —à–∫–∞–ª—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
buildScale();
